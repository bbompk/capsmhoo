version: '1.0'
services:
  # postgresql db
  postgres:
    build:
      context: ./
      dockerfile: ./dockerfiles/db.Dockerfile
    container_name: capsmhoo-postgres
    restart: always
    environment:
      POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_vol:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - capsmhoo-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=${POSTGRES_USER} --dbname=${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
  # rabbitmq
  rabbitmq:
    image: rabbitmq:management
    container_name: capsmhoo-rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - capsmhoo-net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
  # user service
  user-service:
    container_name: user-service
    build:
      context: ./ 
      dockerfile: ./dockerfiles/user-service.Dockerfile
    env_file: .env
    environment:
      MONGO_URI: ${MONGO_URI}
      ENV: integration
    ports:
      - "8080:8080"
    networks:
      - capsmhoo-net
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: always
  # team service
  team-service:
    container_name: team-service
    build:
      context: ./ 
      dockerfile: ./dockerfiles/team-service.Dockerfile
    ports:
      - "50051:50051"
    networks:
      - capsmhoo-net
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: always
  # team service
  project-service:
    container_name: project-service
    build:
      context: ./ 
      dockerfile: ./dockerfiles/project-service.Dockerfile
    ports:
      - "50052:50052"
    networks:
      - capsmhoo-net
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: always
  # noti service
  noti-service:
    container_name: noti-service
    build:
      context: ./ 
      dockerfile: ./dockerfiles/noti-service.Dockerfile
    env_file: .env
    environment:
      MONGO_URI: ${MONGO_URI}
      ENV: integration
    ports:
      - "50054:50054"
    networks:
      - capsmhoo-net
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: always
  # api gateway
  api-gateway:
    container_name: api-gateway
    build:
      context: ./ 
      dockerfile: ./dockerfiles/api-gateway.Dockerfile
    ports:
      - "8082:8082"
    networks:
      - capsmhoo-net
    depends_on:
      - user-service
      - team-service
      - noti-service
    restart: always

networks:
  capsmhoo-net: {}

volumes:
  postgres_vol: